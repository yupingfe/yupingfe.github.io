import{_ as e,o as p,c,b as n,a as t,d as s,e as o,r as l}from"./app.aa0b1638.js";const r={},i=n("h1",{id:"javascript-\u6807\u51C6\u98CE\u683C\u6307\u5357",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#javascript-\u6807\u51C6\u98CE\u683C\u6307\u5357","aria-hidden":"true"},"#"),s(" JavaScript \u6807\u51C6\u98CE\u683C\u6307\u5357")],-1),u=s("\u8FD9\u662F JavaScript "),k={href:"https://github.com/standard/standard",target:"_blank",rel:"noopener noreferrer"},d=s("standard"),_=s(" \u4EE3\u7801\u89C4\u8303\u7684\u5168\u6587\u3002"),g=n("p",null,[n("strong",null,"\u4F7F\u7528\u4E24\u4E2A\u7A7A\u683C"),s("\u8FDB\u884C\u7F29\u8FDB\u3002")],-1),h=s("eslint: "),m={href:"http://eslint.org/docs/rules/indent",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"indent",-1),f=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">hello</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),y=n("p",null,[s("\u9664\u9700\u8981\u8F6C\u4E49\u7684\u60C5\u51B5\u5916\uFF0C"),n("strong",null,"\u5B57\u7B26\u4E32\u7EDF\u4E00\u4F7F\u7528\u5355\u5F15\u53F7"),s("\u3002")],-1),j=s("eslint: "),w={href:"http://eslint.org/docs/rules/quotes",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"quotes",-1),x=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello there&#39;</span><span class="token punctuation">)</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div class=&#39;box&#39;&gt;&quot;</span><span class="token punctuation">)</span>
</code></pre></div>`,1),N=n("p",null,[n("strong",null,"\u4E0D\u8981\u5B9A\u4E49\u672A\u4F7F\u7528\u7684\u53D8\u91CF"),s("\u3002")],-1),q=s("eslint: "),F={href:"http://eslint.org/docs/rules/no-unused-vars",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"no-unused-vars",-1),J=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myFunction</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">something</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),D=n("p",null,[n("strong",null,"\u5173\u952E\u5B57\u540E\u9762\u52A0\u7A7A\u683C"),s("\u3002")],-1),E=s("eslint: "),O={href:"http://eslint.org/docs/rules/keyword-spacing",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"keyword-spacing",-1),H=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>   <span class="token comment">// \u2713 ok</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),V=n("p",null,[n("strong",null,"\u51FD\u6570\u58F0\u660E\u65F6\u62EC\u53F7\u4E0E\u51FD\u6570\u540D\u95F4\u52A0\u7A7A\u683C"),s("\u3002")],-1),C=s("eslint: "),I={href:"http://eslint.org/docs/rules/space-before-function-paren",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"space-before-function-paren",-1),T=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">name</span> <span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>   <span class="token comment">// \u2713 ok</span>
<span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>

<span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token comment">// \u2713 ok</span>
<span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>       <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),$=n("p",null,[n("strong",null,"\u59CB\u7EC8\u4F7F\u7528"),s(),n("code",null,"==="),s(" \u66FF\u4EE3 "),n("code",null,"=="),s("\u3002"),n("br"),s(" \u4F8B\u5916\uFF1A "),n("code",null,"obj == null"),s(" \u53EF\u4EE5\u7528\u6765\u68C0\u67E5 "),n("code",null,"null || undefined"),s("\u3002")],-1),B=s("eslint: "),z={href:"http://eslint.org/docs/rules/eqeqeq",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"eqeqeq",-1),P=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!==</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!=</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,2),L=n("p",null,[n("strong",null,"\u5B57\u7B26\u4E32\u62FC\u63A5\u64CD\u4F5C\u7B26 (Infix operators)"),s(" \u4E4B\u95F4\u8981\u7559\u7A7A\u683C\u3002")],-1),U=s("eslint: "),Y={href:"http://eslint.org/docs/rules/space-infix-ops",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"space-infix-ops",-1),K=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">var</span> message <span class="token operator">=</span> <span class="token string">&#39;hello, &#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;!&#39;</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> x<span class="token operator">=</span><span class="token number">2</span>
<span class="token keyword">var</span> message <span class="token operator">=</span> <span class="token string">&#39;hello, &#39;</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">&#39;!&#39;</span>
</code></pre></div>`,2),Q=n("p",null,[n("strong",null,"\u9017\u53F7\u540E\u9762\u52A0\u7A7A\u683C"),s("\u3002")],-1),W=s("eslint: "),X={href:"http://eslint.org/docs/rules/comma-spacing",target:"_blank",rel:"noopener noreferrer"},Z=n("code",null,"comma-spacing",-1),nn=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">greet</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">greet</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
</code></pre></div>`,2),sn=n("p",null,[n("strong",null,"else \u5173\u952E\u5B57\u8981\u4E0E\u82B1\u62EC\u53F7"),s("\u4FDD\u6301\u5728\u540C\u4E00\u884C\u3002")],-1),an=s("eslint: "),tn={href:"http://eslint.org/docs/rules/brace-style",target:"_blank",rel:"noopener noreferrer"},on=n("code",null,"brace-style",-1),en=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2717 avoid</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div>`,2),pn=n("p",null,[n("strong",null,"\u591A\u884C if \u8BED\u53E5\u7684"),s("\u7684\u62EC\u53F7\u4E0D\u80FD\u7701\u3002")],-1),cn=s("eslint: "),ln={href:"http://eslint.org/docs/rules/curly",target:"_blank",rel:"noopener noreferrer"},rn=n("code",null,"curly",-1),un=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>quiet <span class="token operator">!==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;done&#39;</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>quiet <span class="token operator">!==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;done&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2717 avoid</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>quiet <span class="token operator">!==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;done&#39;</span><span class="token punctuation">)</span>
</code></pre></div>`,3),kn=n("p",null,[n("strong",null,"\u4E0D\u8981\u4E22\u6389"),s("\u5F02\u5E38\u5904\u7406\u4E2D"),n("code",null,"err"),s("\u53C2\u6570\u3002")],-1),dn=s("eslint: "),_n={href:"http://eslint.org/docs/rules/handle-callback-err",target:"_blank",rel:"noopener noreferrer"},gn=n("code",null,"handle-callback-err",-1),hn=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err
  window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;done&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2717 avoid</span>
<span class="token function">run</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;done&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,2),mn=n("p",null,[n("strong",null,"\u4F7F\u7528\u6D4F\u89C8\u5668\u5168\u5C40\u53D8\u91CF\u65F6\u52A0\u4E0A"),s(),n("code",null,"window."),s(" \u524D\u7F00\u3002"),n("br"),n("code",null,"document"),s("\u3001"),n("code",null,"console"),s(" \u548C "),n("code",null,"navigator"),s(" \u9664\u5916\u3002")],-1),vn=s("eslint: "),fn={href:"http://eslint.org/docs/rules/no-undef",target:"_blank",rel:"noopener noreferrer"},yn=n("code",null,"no-undef",-1),jn=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),wn=n("p",null,[n("strong",null,"\u4E0D\u5141\u8BB8\u6709\u8FDE\u7EED\u591A\u884C\u7A7A\u884C"),s("\u3002")],-1),bn=s("eslint: "),xn={href:"http://eslint.org/docs/rules/no-multiple-empty-lines",target:"_blank",rel:"noopener noreferrer"},Nn=n("code",null,"no-multiple-empty-lines",-1),qn=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span>


console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
</code></pre></div>`,2),Fn=n("p",null,[n("strong",null,"\u5BF9\u4E8E\u4E09\u5143\u8FD0\u7B97\u7B26"),s(),n("code",null,"?"),s(" \u548C "),n("code",null,":"),s(" \u4E0E\u4ED6\u4EEC\u6240\u8D1F\u8D23\u7684\u4EE3\u7801\u5904\u4E8E\u540C\u4E00\u884C")],-1),Sn=s("eslint: "),Jn={href:"http://eslint.org/docs/rules/operator-linebreak",target:"_blank",rel:"noopener noreferrer"},Dn=n("code",null,"operator-linebreak",-1),En=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token keyword">var</span> location <span class="token operator">=</span> env<span class="token punctuation">.</span>development <span class="token operator">?</span> <span class="token string">&#39;localhost&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;www.api.com&#39;</span>

<span class="token comment">// \u2713 ok</span>
<span class="token keyword">var</span> location <span class="token operator">=</span> env<span class="token punctuation">.</span>development
  <span class="token operator">?</span> <span class="token string">&#39;localhost&#39;</span>
  <span class="token operator">:</span> <span class="token string">&#39;www.api.com&#39;</span>

<span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> location <span class="token operator">=</span> env<span class="token punctuation">.</span>development <span class="token operator">?</span>
  <span class="token string-property property">&#39;localhost&#39;</span> <span class="token operator">:</span>
  <span class="token string">&#39;www.api.com&#39;</span>
</code></pre></div>`,1),On=n("p",null,[n("strong",null,"\u6BCF\u4E2A var \u5173\u952E\u5B57"),s("\u5355\u72EC\u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\u3002")],-1),An=s("eslint: "),Hn={href:"http://eslint.org/docs/rules/one-var",target:"_blank",rel:"noopener noreferrer"},Vn=n("code",null,"one-var",-1),Cn=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token keyword">var</span> silent <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">var</span> verbose <span class="token operator">=</span> <span class="token boolean">true</span>

<span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> silent <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> verbose <span class="token operator">=</span> <span class="token boolean">true</span>

<span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> silent <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    verbose <span class="token operator">=</span> <span class="token boolean">true</span>
</code></pre></div>`,1),In=n("p",null,[n("strong",null,"\u6761\u4EF6\u8BED\u53E5\u4E2D\u8D4B\u503C\u8BED\u53E5"),s("\u4F7F\u7528\u62EC\u53F7\u5305\u8D77\u6765\u3002\u8FD9\u6837\u4F7F\u5F97\u4EE3\u7801\u66F4\u52A0\u6E05\u6670\u53EF\u8BFB\uFF0C\u800C\u4E0D\u4F1A\u8BA4\u4E3A\u662F\u5C06\u6761\u4EF6\u5224\u65AD\u8BED\u53E5\u7684\u5168\u7B49\u53F7\uFF08"),n("code",null,"==="),s("\uFF09\u9519\u5199\u6210\u4E86\u7B49\u53F7\uFF08"),n("code",null,"="),s("\uFF09\u3002")],-1),Rn=s("eslint: "),Tn={href:"http://eslint.org/docs/rules/no-cond-assign",target:"_blank",rel:"noopener noreferrer"},$n=n("code",null,"no-cond-assign",-1),Bn=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u2713 ok</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>expr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u2717 avoid</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>m <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>expr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),zn=n("p",null,[n("strong",null,"\u5355\u884C\u4EE3\u7801\u5757\u4E24\u8FB9\u52A0\u7A7A\u683C"),s("\u3002")],-1),Mn=s("eslint: "),Pn={href:"http://eslint.org/docs/rules/block-spacing",target:"_blank",rel:"noopener noreferrer"},Ln=n("code",null,"block-spacing",-1),Un=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
  <span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>  <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Yn=n("p",null,[n("strong",null,"\u5BF9\u4E8E\u53D8\u91CF\u548C\u51FD\u6570\u540D\u7EDF\u4E00\u4F7F\u7528\u9A7C\u5CF0\u547D\u540D\u6CD5"),s("\u3002")],-1),Gn=s("eslint: "),Kn={href:"http://eslint.org/docs/rules/camelcase",target:"_blank",rel:"noopener noreferrer"},Qn=n("code",null,"camelcase",-1),Wn=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">my_function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
  <span class="token keyword">function</span> <span class="token function">myFunction</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>     <span class="token comment">// \u2713 ok</span>

  <span class="token keyword">var</span> my_var <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>           <span class="token comment">// \u2717 avoid</span>
  <span class="token keyword">var</span> myVar <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>            <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Xn=n("p",null,[n("strong",null,"\u4E0D\u5141\u8BB8\u6709\u591A\u4F59\u7684\u884C\u672B\u9017\u53F7"),s("\u3002")],-1),Zn=s("eslint: "),ns={href:"http://eslint.org/docs/rules/comma-dangle",target:"_blank",rel:"noopener noreferrer"},ss=n("code",null,"comma-dangle",-1),as=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// \u2717 avoid</span>
  <span class="token punctuation">}</span>
</code></pre></div>`,1),ts=n("p",null,[n("strong",null,"\u59CB\u7EC8\u5C06\u9017\u53F7\u7F6E\u4E8E\u884C\u672B"),s("\u3002")],-1),os=s("eslint: "),es={href:"http://eslint.org/docs/rules/comma-style",target:"_blank",rel:"noopener noreferrer"},ps=n("code",null,"comma-style",-1),cs=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span>
    <span class="token punctuation">,</span><span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span>   <span class="token comment">// \u2717 avoid</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span>   <span class="token comment">// \u2713 ok</span>
  <span class="token punctuation">}</span>
</code></pre></div>`,1),ls=n("p",null,[n("strong",null,"\u70B9\u53F7\u64CD\u4F5C\u7B26\u987B\u4E0E\u5C5E\u6027\u9700\u5728\u540C\u4E00\u884C"),s("\u3002")],-1),rs=s("eslint: "),is={href:"http://eslint.org/docs/rules/dot-location",target:"_blank",rel:"noopener noreferrer"},us=n("code",null,"dot-location",-1),ks=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>  console<span class="token punctuation">.</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// \u2717 avoid</span>

  console
    <span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),ds=n("p",null,[n("strong",null,"\u6587\u4EF6\u672B\u5C3E\u7559\u4E00\u7A7A\u884C"),s("\u3002")],-1),_s=s("eslint: "),gs={href:"http://eslint.org/docs/rules/eol-last",target:"_blank",rel:"noopener noreferrer"},hs=n("code",null,"eol-last",-1),ms=n("p",null,[n("strong",null,"\u51FD\u6570\u8C03\u7528\u65F6\u6807\u8BC6\u7B26\u4E0E\u62EC\u53F7\u95F4\u4E0D\u7559\u95F4\u9694"),s("\u3002")],-1),vs=s("eslint: "),fs={href:"http://eslint.org/docs/rules/func-call-spacing",target:"_blank",rel:"noopener noreferrer"},ys=n("code",null,"func-call-spacing",-1),js=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span> <span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u2717 avoid</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),ws=n("p",null,[n("strong",null,"\u952E\u503C\u5BF9\u5F53\u4E2D\u5192\u53F7\u4E0E\u503C\u4E4B\u95F4\u8981\u7559\u7A7A\u767D"),s("\u3002")],-1),bs=s("eslint: "),xs={href:"http://eslint.org/docs/rules/key-spacing",target:"_blank",rel:"noopener noreferrer"},Ns=n("code",null,"key-spacing",-1),qs=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;key&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;key&#39;</span> <span class="token operator">:</span><span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span>     <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;key&#39;</span><span class="token operator">:</span><span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span>      <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;key&#39;</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span>     <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Fs=n("p",null,[n("strong",null,"\u6784\u9020\u51FD\u6570\u8981\u4EE5\u5927\u5199\u5B57\u6BCD\u5F00\u5934"),s("\u3002")],-1),Ss=s("eslint: "),Js={href:"http://eslint.org/docs/rules/new-cap",target:"_blank",rel:"noopener noreferrer"},Ds=n("code",null,"new-cap",-1),Es=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">animal</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> dog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>

<span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> dog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Os=n("p",null,[n("strong",null,"\u65E0\u53C2\u7684\u6784\u9020\u51FD\u6570\u8C03\u7528\u65F6\u8981\u5E26\u4E0A\u62EC\u53F7"),s("\u3002")],-1),As=s("eslint: "),Hs={href:"http://eslint.org/docs/rules/new-parens",target:"_blank",rel:"noopener noreferrer"},Vs=n("code",null,"new-parens",-1),Cs=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> dog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> dog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Is=n("p",null,[n("strong",null,"\u5BF9\u8C61\u4E2D\u5B9A\u4E49\u4E86\u5B58\u503C\u5668\uFF0C\u4E00\u5B9A\u8981\u5BF9\u5E94\u7684\u5B9A\u4E49\u53D6\u503C\u5668"),s("\u3002")],-1),Rs=s("eslint: "),Ts={href:"http://eslint.org/docs/rules/accessor-pairs",target:"_blank",rel:"noopener noreferrer"},$s=n("code",null,"accessor-pairs",-1),Bs=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">set</span> <span class="token function">name</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// \u2717 avoid</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_name <span class="token operator">=</span> value
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">set</span> <span class="token function">name</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_name <span class="token operator">=</span> value
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">get</span> <span class="token function">name</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment">// \u2713 ok</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_name
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),zs=n("p",null,[n("strong",null,[s("\u5B50\u7C7B\u7684\u6784\u9020\u5668\u4E2D\u4E00\u5B9A\u8981\u8C03\u7528 "),n("code",null,"super")])],-1),Ms=s("eslint: "),Ps={href:"http://eslint.org/docs/rules/constructor-super",target:"_blank",rel:"noopener noreferrer"},Ls=n("code",null,"constructor-super",-1),Us=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Mammal</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Ys=n("p",null,[n("strong",null,"\u4F7F\u7528\u6570\u7EC4\u5B57\u9762\u91CF\u800C\u4E0D\u662F\u6784\u9020\u5668"),s("\u3002")],-1),Gs=s("eslint: "),Ks={href:"http://eslint.org/docs/rules/no-array-constructor",target:"_blank",rel:"noopener noreferrer"},Qs=n("code",null,"no-array-constructor",-1),Ws=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>            <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Xs=n("p",null,[n("strong",null,[s("\u907F\u514D\u4F7F\u7528 "),n("code",null,"arguments.callee"),s(" \u548C "),n("code",null,"arguments.caller")]),s("\u3002")],-1),Zs=s("eslint: "),na={href:"http://eslint.org/docs/rules/no-caller",target:"_blank",rel:"noopener noreferrer"},sa=n("code",null,"no-caller",-1),aa=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

  arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

  <span class="token function">foo</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),ta=n("p",null,[n("strong",null,"\u907F\u514D\u5BF9\u7C7B\u540D\u91CD\u65B0\u8D4B\u503C"),s("\u3002")],-1),oa=s("eslint: "),ea={href:"http://eslint.org/docs/rules/no-class-assign",target:"_blank",rel:"noopener noreferrer"},pa=n("code",null,"no-class-assign",-1),ca=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
Dog <span class="token operator">=</span> <span class="token string">&#39;Fido&#39;</span>    <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),la=n("p",null,[n("strong",null,[s("\u907F\u514D\u4FEE\u6539\u4F7F\u7528 "),n("code",null,"const"),s(" \u58F0\u660E\u7684\u53D8\u91CF")]),s("\u3002")],-1),ra=s("eslint: "),ia={href:"http://eslint.org/docs/rules/no-const-assign",target:"_blank",rel:"noopener noreferrer"},ua=n("code",null,"no-const-assign",-1),ka=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> score <span class="token operator">=</span> <span class="token number">100</span>
score <span class="token operator">=</span> <span class="token number">125</span>       <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),da=n("p",null,[n("strong",null,"\u907F\u514D\u4F7F\u7528\u5E38\u91CF\u4F5C\u4E3A\u6761\u4EF6\u8868\u8FBE\u5F0F\u7684\u6761\u4EF6\uFF08\u5FAA\u73AF\u8BED\u53E5\u9664\u5916\uFF09"),s("\u3002")],-1),_a=s("eslint: "),ga={href:"http://eslint.org/docs/rules/no-constant-condition",target:"_blank",rel:"noopener noreferrer"},ha=n("code",null,"no-constant-condition",-1),ma=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// \u2717 avoid</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u2713 ok</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u2713 ok</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),va=n("p",null,[n("strong",null,"\u6B63\u5219\u4E2D\u4E0D\u8981\u4F7F\u7528\u63A7\u5236\u7B26"),s("\u3002")],-1),fa=s("eslint: "),ya={href:"http://eslint.org/docs/rules/no-control-regex",target:"_blank",rel:"noopener noreferrer"},ja=n("code",null,"no-control-regex",-1),wa=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\x1f</span><span class="token regex-delimiter">/</span></span>    <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\x20</span><span class="token regex-delimiter">/</span></span>    <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),ba=n("p",null,[n("strong",null,[s("\u4E0D\u8981\u4F7F\u7528 "),n("code",null,"debugger")]),s("\u3002")],-1),xa=s("eslint: "),Na={href:"http://eslint.org/docs/rules/no-debugger",target:"_blank",rel:"noopener noreferrer"},qa=n("code",null,"no-debugger",-1),Fa=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">debugger</span>      <span class="token comment">// \u2717 avoid</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>
</code></pre></div>`,1),Sa=n("p",null,[n("strong",null,[s("\u4E0D\u8981\u5BF9\u53D8\u91CF\u4F7F\u7528 "),n("code",null,"delete"),s(" \u64CD\u4F5C")]),s("\u3002")],-1),Ja=s("eslint: "),Da={href:"http://eslint.org/docs/rules/no-delete-var",target:"_blank",rel:"noopener noreferrer"},Ea=n("code",null,"no-delete-var",-1),Oa=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> name
<span class="token keyword">delete</span> name     <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Aa=n("p",null,[n("strong",null,"\u4E0D\u8981\u5B9A\u4E49\u5197\u4F59\u7684\u51FD\u6570\u53C2\u6570"),s("\u3002")],-1),Ha=s("eslint: "),Va={href:"http://eslint.org/docs/rules/no-dupe-args",target:"_blank",rel:"noopener noreferrer"},Ca=n("code",null,"no-dupe-args",-1),Ia=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u2717 avoid</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">sum</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u2713 ok</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Ra=n("p",null,[n("strong",null,"\u7C7B\u4E2D\u4E0D\u8981\u5B9A\u4E49\u5197\u4F59\u7684\u5C5E\u6027"),s("\u3002")],-1),Ta=s("eslint: "),$a={href:"http://eslint.org/docs/rules/no-dupe-class-members",target:"_blank",rel:"noopener noreferrer"},Ba=n("code",null,"no-dupe-class-members",-1),za=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span>
  <span class="token function">bark</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">bark</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Ma=n("p",null,[n("strong",null,"\u5BF9\u8C61\u5B57\u9762\u91CF\u4E2D\u4E0D\u8981\u5B9A\u4E49\u91CD\u590D\u7684\u5C5E\u6027"),s("\u3002")],-1),Pa=s("eslint: "),La={href:"http://eslint.org/docs/rules/no-dupe-keys",target:"_blank",rel:"noopener noreferrer"},Ua=n("code",null,"no-dupe-keys",-1),Ya=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jane Doe&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Ga=n("p",null,[n("strong",null,[n("code",null,"switch"),s(" \u8BED\u53E5\u4E2D\u4E0D\u8981\u5B9A\u4E49\u91CD\u590D\u7684 "),n("code",null,"case"),s(" \u5206\u652F")]),s("\u3002")],-1),Ka=s("eslint: "),Qa={href:"http://eslint.org/docs/rules/no-duplicate-case",target:"_blank",rel:"noopener noreferrer"},Wa=n("code",null,"no-duplicate-case",-1),Xa=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
    <span class="token comment">// ...</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>     <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Za=n("p",null,[n("strong",null,"\u540C\u4E00\u6A21\u5757\u6709\u591A\u4E2A\u5BFC\u5165\u65F6\u4E00\u6B21\u6027\u5199\u5B8C"),s("\u3002")],-1),nt=s("eslint: "),st={href:"http://eslint.org/docs/rules/no-duplicate-imports",target:"_blank",rel:"noopener noreferrer"},at=n("code",null,"no-duplicate-imports",-1),tt=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> myFunc1 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;module&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> myFunc2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;module&#39;</span>          <span class="token comment">// \u2717 avoid</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> myFunc1<span class="token punctuation">,</span> myFunc2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;module&#39;</span> <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),ot=n("p",null,[n("strong",null,"\u6B63\u5219\u4E2D\u4E0D\u8981\u4F7F\u7528\u7A7A\u5B57\u7B26"),s("\u3002")],-1),et=s("eslint: "),pt={href:"http://eslint.org/docs/rules/no-empty-character-class",target:"_blank",rel:"noopener noreferrer"},ct=n("code",null,"no-empty-character-class",-1),lt=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> myRegex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^abc[]</span><span class="token regex-delimiter">/</span></span>      <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> myRegex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^abc[a-z]</span><span class="token regex-delimiter">/</span></span>   <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),rt=n("p",null,[n("strong",null,"\u4E0D\u8981\u89E3\u6784\u7A7A\u503C"),s("\u3002")],-1),it=s("eslint: "),ut={href:"http://eslint.org/docs/rules/no-empty-pattern",target:"_blank",rel:"noopener noreferrer"},kt=n("code",null,"no-empty-pattern",-1),dt=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">=</span> foo         <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> b <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">=</span> foo      <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),_t=n("p",null,[n("strong",null,[s("\u4E0D\u8981\u4F7F\u7528 "),n("code",null,"eval()")]),s("\u3002")],-1),gt=s("eslint: "),ht={href:"http://eslint.org/docs/rules/no-eval",target:"_blank",rel:"noopener noreferrer"},mt=n("code",null,"no-eval",-1),vt=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">eval</span><span class="token punctuation">(</span> <span class="token string">&quot;var result = user.&quot;</span> <span class="token operator">+</span> propName <span class="token punctuation">)</span> <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> user<span class="token punctuation">[</span>propName<span class="token punctuation">]</span>             <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),ft=n("p",null,[n("strong",null,[n("code",null,"catch"),s(" \u4E2D\u4E0D\u8981\u5BF9\u9519\u8BEF\u91CD\u65B0\u8D4B\u503C")]),s("\u3002")],-1),yt=s("eslint: "),jt={href:"http://eslint.org/docs/rules/no-ex-assign",target:"_blank",rel:"noopener noreferrer"},wt=n("code",null,"no-ex-assign",-1),bt=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  e <span class="token operator">=</span> <span class="token string">&#39;new value&#39;</span>             <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newVal <span class="token operator">=</span> <span class="token string">&#39;new value&#39;</span>  <span class="token comment">// \u2713 ok</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),xt=n("p",null,[n("strong",null,"\u4E0D\u8981\u6269\u5C55\u539F\u751F\u5BF9\u8C61"),s("\u3002")],-1),Nt=s("eslint: "),qt={href:"http://eslint.org/docs/rules/no-extend-native",target:"_blank",rel:"noopener noreferrer"},Ft=n("code",null,"no-extend-native",-1),St=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">21</span>     <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Jt=n("p",null,[n("strong",null,"\u907F\u514D\u591A\u4F59\u7684\u51FD\u6570\u4E0A\u4E0B\u6587\u7ED1\u5B9A"),s("\u3002")],-1),Dt=s("eslint: "),Et={href:"http://eslint.org/docs/rules/no-extra-bind",target:"_blank",rel:"noopener noreferrer"},Ot=n("code",null,"no-extra-bind",-1),At=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">name</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>

<span class="token keyword">const</span> <span class="token function-variable function">name</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>    <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Ht=n("p",null,[n("strong",null,"\u907F\u514D\u4E0D\u5FC5\u8981\u7684\u5E03\u5C14\u8F6C\u6362"),s("\u3002")],-1),Vt=s("eslint: "),Ct={href:"http://eslint.org/docs/rules/no-extra-boolean-cast",target:"_blank",rel:"noopener noreferrer"},It=n("code",null,"no-extra-boolean-cast",-1),Rt=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// \u2717 avoid</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// \u2713 ok</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Tt=n("p",null,[n("strong",null,"\u4E0D\u8981\u4F7F\u7528\u591A\u4F59\u7684\u62EC\u53F7\u5305\u88F9\u51FD\u6570"),s("\u3002")],-1),$t=s("eslint: "),Bt={href:"http://eslint.org/docs/rules/no-extra-parens",target:"_blank",rel:"noopener noreferrer"},zt=n("code",null,"no-extra-parens",-1),Mt=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> myFunc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> <span class="token function-variable function">myFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>     <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Pt=n("p",null,[n("strong",null,[n("code",null,"switch"),s(" \u4E00\u5B9A\u8981\u4F7F\u7528 "),n("code",null,"break"),s(" \u6765\u5C06\u6761\u4EF6\u5206\u652F\u6B63\u5E38\u4E2D\u65AD")]),s("\u3002")],-1),Lt=s("eslint: "),Ut={href:"http://eslint.org/docs/rules/no-fallthrough",target:"_blank",rel:"noopener noreferrer"},Yt=n("code",null,"no-fallthrough",-1),Gt=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>filter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
    <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>
  <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
    <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">switch</span> <span class="token punctuation">(</span>filter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
    <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">break</span>           <span class="token comment">// \u2713 ok</span>
  <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
    <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">switch</span> <span class="token punctuation">(</span>filter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
    <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// fallthrough  // \u2713 ok</span>
  <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
    <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Kt=n("p",null,[n("strong",null,"\u4E0D\u8981\u7701\u53BB\u5C0F\u6570\u70B9\u524D\u9762\u76840"),s("\u3002")],-1),Qt=s("eslint: "),Wt={href:"http://eslint.org/docs/rules/no-floating-decimal",target:"_blank",rel:"noopener noreferrer"},Xt=n("code",null,"no-floating-decimal",-1),Zt=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> discount <span class="token operator">=</span> <span class="token number">.5</span>      <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> discount <span class="token operator">=</span> <span class="token number">0.5</span>     <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),no=n("p",null,[n("strong",null,"\u907F\u514D\u5BF9\u58F0\u660E\u8FC7\u7684\u51FD\u6570\u91CD\u65B0\u8D4B\u503C"),s("\u3002")],-1),so=s("eslint: "),ao={href:"http://eslint.org/docs/rules/no-func-assign",target:"_blank",rel:"noopener noreferrer"},to=n("code",null,"no-func-assign",-1),oo=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myFunc</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
myFunc <span class="token operator">=</span> myOtherFunc    <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),eo=n("p",null,[n("strong",null,"\u4E0D\u8981\u5BF9\u5168\u5C40\u53EA\u8BFB\u5BF9\u8C61\u91CD\u65B0\u8D4B\u503C"),s("\u3002")],-1),po=s("eslint: "),co={href:"http://eslint.org/docs/rules/no-global-assign",target:"_blank",rel:"noopener noreferrer"},lo=n("code",null,"no-global-assign",-1),ro=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>window <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>     <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),io=n("p",null,[n("strong",null,[s("\u6CE8\u610F\u9690\u5F0F\u7684 "),n("code",null,"eval()")]),s("\u3002")],-1),uo=s("eslint: "),ko={href:"http://eslint.org/docs/rules/no-implied-eval",target:"_blank",rel:"noopener noreferrer"},_o=n("code",null,"no-implied-eval",-1),go=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">&quot;alert(&#39;Hello world&#39;)&quot;</span><span class="token punctuation">)</span>                   <span class="token comment">// \u2717 avoid</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Hello world&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),ho=n("p",null,[n("strong",null,"\u5D4C\u5957\u7684\u4EE3\u7801\u5757\u4E2D\u7981\u6B62\u518D\u5B9A\u4E49\u51FD\u6570"),s("\u3002")],-1),mo=s("eslint: "),vo={href:"http://eslint.org/docs/rules/no-inner-declarations",target:"_blank",rel:"noopener noreferrer"},fo=n("code",null,"no-inner-declarations",-1),yo=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>authenticated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">setAuthUser</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),jo=n("p",null,[n("strong",null,[s("\u4E0D\u8981\u5411 "),n("code",null,"RegExp"),s(" \u6784\u9020\u5668\u4F20\u5165\u975E\u6CD5\u7684\u6B63\u5219\u8868\u8FBE\u5F0F")]),s("\u3002")],-1),wo=s("eslint: "),bo={href:"http://eslint.org/docs/rules/no-invalid-regexp",target:"_blank",rel:"noopener noreferrer"},xo=n("code",null,"no-invalid-regexp",-1),No=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;[a-z&#39;</span><span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token function">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;[a-z]&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),qo=n("p",null,[n("strong",null,"\u4E0D\u8981\u4F7F\u7528\u975E\u6CD5\u7684\u7A7A\u767D\u7B26"),s("\u3002")],-1),Fo=s("eslint: "),So={href:"http://eslint.org/docs/rules/no-irregular-whitespace",target:"_blank",rel:"noopener noreferrer"},Jo=n("code",null,"no-irregular-whitespace",-1),Do=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myFunc</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">/*&lt;NBSP&gt;*/</span><span class="token punctuation">{</span><span class="token punctuation">}</span>   <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Eo=n("p",null,[n("strong",null,[s("\u7981\u6B62\u4F7F\u7528 "),n("code",null,"__iterator__")]),s("\u3002")],-1),Oo=s("eslint: "),Ao={href:"http://eslint.org/docs/rules/no-iterator",target:"_blank",rel:"noopener noreferrer"},Ho=n("code",null,"no-iterator",-1),Vo=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token class-name">Foo</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">__iterator__</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>   <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Co=n("p",null,[n("strong",null,"\u5916\u90E8\u53D8\u91CF\u4E0D\u8981\u4E0E\u5BF9\u8C61\u5C5E\u6027\u91CD\u540D"),s("\u3002")],-1),Io=s("eslint: "),Ro={href:"http://eslint.org/docs/rules/no-label-var",target:"_blank",rel:"noopener noreferrer"},To=n("code",null,"no-label-var",-1),$o=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> score <span class="token operator">=</span> <span class="token number">100</span>
<span class="token keyword">function</span> <span class="token function">game</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment">// \u2717 avoid</span>
    score <span class="token operator">-=</span> <span class="token number">10</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">continue</span> score
    <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Bo=n("p",null,[n("strong",null,"\u4E0D\u8981\u4F7F\u7528\u6807\u7B7E\u8BED\u53E5"),s("\u3002")],-1),zo=s("eslint: "),Mo={href:"http://eslint.org/docs/rules/no-labels",target:"_blank",rel:"noopener noreferrer"},Po=n("code",null,"no-labels",-1),Lo=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token literal-property property">label</span><span class="token operator">:</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">break</span> label     <span class="token comment">// \u2717 avoid</span>
  <span class="token punctuation">}</span>
</code></pre></div>`,1),Uo=n("p",null,[n("strong",null,"\u4E0D\u8981\u4E66\u5199\u4E0D\u5FC5\u8981\u7684\u5D4C\u5957\u4EE3\u7801\u5757"),s("\u3002")],-1),Yo=s("eslint: "),Go={href:"http://eslint.org/docs/rules/no-lone-blocks",target:"_blank",rel:"noopener noreferrer"},Ko=n("code",null,"no-lone-blocks",-1),Qo=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myFunc</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span>                   <span class="token comment">// \u2717 avoid</span>
    <span class="token function">myOtherFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">myFunc</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">myOtherFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">// \u2713 ok</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Wo=n("p",null,[n("strong",null,"\u4E0D\u8981\u6DF7\u5408\u4F7F\u7528\u7A7A\u683C\u4E0E\u5236\u8868\u7B26\u4F5C\u4E3A\u7F29\u8FDB"),s("\u3002")],-1),Xo=s("eslint: "),Zo={href:"http://eslint.org/docs/rules/no-mixed-spaces-and-tabs",target:"_blank",rel:"noopener noreferrer"},ne=n("code",null,"no-mixed-spaces-and-tabs",-1),se=n("p",null,[n("strong",null,"\u9664\u4E86\u7F29\u8FDB\uFF0C\u4E0D\u8981\u4F7F\u7528\u591A\u4E2A\u7A7A\u683C"),s("\u3002")],-1),ae=s("eslint: "),te={href:"http://eslint.org/docs/rules/no-multi-spaces",target:"_blank",rel:"noopener noreferrer"},oe=n("code",null,"no-multi-spaces",-1),ee=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> id <span class="token operator">=</span>    <span class="token number">1234</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token number">1234</span>       <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),pe=n("p",null,[n("strong",null,"\u4E0D\u8981\u4F7F\u7528\u591A\u884C\u5B57\u7B26\u4E32"),s("\u3002")],-1),ce=s("eslint: "),le={href:"http://eslint.org/docs/rules/no-multi-str",target:"_blank",rel:"noopener noreferrer"},re=n("code",null,"no-multi-str",-1),ie=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token string">&#39;Hello \\
                 world&#39;</span>     <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),ue=n("p",null,[n("strong",null,[n("code",null,"new"),s(" \u521B\u5EFA\u5BF9\u8C61\u5B9E\u4F8B\u540E\u9700\u8981\u8D4B\u503C\u7ED9\u53D8\u91CF")]),s("\u3002")],-1),ke=s("eslint: "),de={href:"http://eslint.org/docs/rules/no-new",target:"_blank",rel:"noopener noreferrer"},_e=n("code",null,"no-new",-1),ge=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Character</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                     <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> character <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Character</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),he=n("p",null,[n("strong",null,[s("\u7981\u6B62\u4F7F\u7528 "),n("code",null,"Function"),s(" \u6784\u9020\u5668")]),s("\u3002")],-1),me=s("eslint: "),ve={href:"http://eslint.org/docs/rules/no-new-func",target:"_blank",rel:"noopener noreferrer"},fe=n("code",null,"no-new-func",-1),ye=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;return a + b&#39;</span><span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),je=n("p",null,[n("strong",null,[s("\u7981\u6B62\u4F7F\u7528 "),n("code",null,"Object"),s(" \u6784\u9020\u5668")]),s("\u3002")],-1),we=s("eslint: "),be={href:"http://eslint.org/docs/rules/no-new-object",target:"_blank",rel:"noopener noreferrer"},xe=n("code",null,"no-new-object",-1),Ne=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),qe=n("p",null,[n("strong",null,[s("\u7981\u6B62\u4F7F\u7528 "),n("code",null,"new require")]),s("\u3002")],-1),Fe=s("eslint: "),Se={href:"http://eslint.org/docs/rules/no-new-require",target:"_blank",rel:"noopener noreferrer"},Je=n("code",null,"no-new-require",-1),De=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> myModule <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">require</span><span class="token punctuation">(</span><span class="token string">&#39;my-module&#39;</span><span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Ee=n("p",null,[n("strong",null,[s("\u7981\u6B62\u4F7F\u7528 "),n("code",null,"Symbol"),s(" \u6784\u9020\u5668")]),s("\u3002")],-1),Oe=s("eslint: "),Ae={href:"http://eslint.org/docs/rules/no-new-symbol",target:"_blank",rel:"noopener noreferrer"},He=n("code",null,"no-new-symbol",-1),Ve=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Ce=n("p",null,[n("strong",null,"\u7981\u6B62\u4F7F\u7528\u539F\u59CB\u5305\u88C5\u5668"),s("\u3002")],-1),Ie=s("eslint: "),Re={href:"http://eslint.org/docs/rules/no-new-wrappers",target:"_blank",rel:"noopener noreferrer"},Te=n("code",null,"no-new-wrappers",-1),$e=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Be=n("p",null,[n("strong",null,"\u4E0D\u8981\u5C06\u5168\u5C40\u5BF9\u8C61\u7684\u5C5E\u6027\u4F5C\u4E3A\u51FD\u6570\u8C03\u7528"),s("\u3002")],-1),ze=s("eslint: "),Me={href:"http://eslint.org/docs/rules/no-obj-calls",target:"_blank",rel:"noopener noreferrer"},Pe=n("code",null,"no-obj-calls",-1),Le=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> math <span class="token operator">=</span> <span class="token function">Math</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Ue=n("p",null,[n("strong",null,"\u4E0D\u8981\u4F7F\u7528\u516B\u8FDB\u5236\u5B57\u9762\u91CF"),s("\u3002")],-1),Ye=s("eslint: "),Ge={href:"http://eslint.org/docs/rules/no-octal",target:"_blank",rel:"noopener noreferrer"},Ke=n("code",null,"no-octal",-1),Qe=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> octal <span class="token operator">=</span> <span class="token number">042</span>         <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> decimal <span class="token operator">=</span> <span class="token number">34</span>        <span class="token comment">// \u2713 ok</span>
<span class="token keyword">const</span> octalString <span class="token operator">=</span> <span class="token string">&#39;042&#39;</span> <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),We=n("p",null,[n("strong",null,"\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u4E2D\u4E5F\u4E0D\u8981\u4F7F\u7528\u516B\u8FDB\u5236\u8F6C\u4E49\u5B57\u7B26"),s("\u3002")],-1),Xe=s("eslint: "),Ze={href:"http://eslint.org/docs/rules/no-octal-escape",target:"_blank",rel:"noopener noreferrer"},np=n("code",null,"no-octal-escape",-1),sp=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> copyright <span class="token operator">=</span> <span class="token string">&#39;Copyright \\251&#39;</span>  <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),ap=n("p",null,[n("strong",null,[s("\u4F7F\u7528 "),n("code",null,"__dirname"),s(" \u548C "),n("code",null,"__filename"),s(" \u65F6\u5C3D\u91CF\u907F\u514D\u4F7F\u7528\u5B57\u7B26\u4E32\u62FC\u63A5")]),s("\u3002")],-1),tp=s("eslint: "),op={href:"http://eslint.org/docs/rules/no-path-concat",target:"_blank",rel:"noopener noreferrer"},ep=n("code",null,"no-path-concat",-1),pp=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> pathToFile <span class="token operator">=</span> __dirname <span class="token operator">+</span> <span class="token string">&#39;/app.js&#39;</span>            <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> pathToFile <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;app.js&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),cp=n("p",null,[s("\u4F7F\u7528 "),n("code",null,"getPrototypeOf"),s(" \u6765\u66FF\u4EE3 "),n("strong",null,[n("code",null,"__proto__")]),s("\u3002")],-1),lp=s("eslint: "),rp={href:"http://eslint.org/docs/rules/no-proto",target:"_blank",rel:"noopener noreferrer"},ip=n("code",null,"no-proto",-1),up=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> obj<span class="token punctuation">.</span>__proto__               <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>  <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),kp=n("p",null,[n("strong",null,"\u4E0D\u8981\u91CD\u590D\u58F0\u660E\u53D8\u91CF"),s("\u3002")],-1),dp=s("eslint: "),_p={href:"http://eslint.org/docs/rules/no-redeclare",target:"_blank",rel:"noopener noreferrer"},gp=n("code",null,"no-redeclare",-1),hp=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;John&#39;</span>
<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;Jane&#39;</span>     <span class="token comment">// \u2717 avoid</span>

<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;John&#39;</span>
name <span class="token operator">=</span> <span class="token string">&#39;Jane&#39;</span>         <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),mp=n("p",null,[n("strong",null,"\u6B63\u5219\u4E2D\u907F\u514D\u4F7F\u7528\u591A\u4E2A\u7A7A\u683C"),s("\u3002")],-1),vp=s("eslint: "),fp={href:"http://eslint.org/docs/rules/no-regex-spaces",target:"_blank",rel:"noopener noreferrer"},yp=n("code",null,"no-regex-spaces",-1),jp=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">test   value</span><span class="token regex-delimiter">/</span></span>   <span class="token comment">// \u2717 avoid</span>

<span class="token keyword">const</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">test {3}value</span><span class="token regex-delimiter">/</span></span>  <span class="token comment">// \u2713 ok</span>
<span class="token keyword">const</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">test value</span><span class="token regex-delimiter">/</span></span>     <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),wp=n("p",null,[n("strong",null,"return \u8BED\u53E5\u4E2D\u7684\u8D4B\u503C\u5FC5\u9700\u6709\u62EC\u53F7\u5305\u88F9"),s("\u3002")],-1),bp=s("eslint: "),xp={href:"http://eslint.org/docs/rules/no-return-assign",target:"_blank",rel:"noopener noreferrer"},Np=n("code",null,"no-return-assign",-1),qp=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> result <span class="token operator">=</span> a <span class="token operator">+</span> b     <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">sum</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>result <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Fp=n("p",null,[n("strong",null,"\u907F\u514D\u5C06\u53D8\u91CF\u8D4B\u503C\u7ED9\u81EA\u5DF1"),s("\u3002")],-1),Sp=s("eslint: "),Jp={href:"http://eslint.org/docs/rules/no-self-assign",target:"_blank",rel:"noopener noreferrer"},Dp=n("code",null,"no-self-assign",-1),Ep=n("div",{class:"language-javascript ext-js"},[n("pre",{class:"language-javascript"},[n("code",null,[s("name "),n("span",{class:"token operator"},"="),s(" name   "),n("span",{class:"token comment"},"// \u2717 avoid"),s(`
`)])])],-1),Op=n("p",null,[n("strong",null,"\u907F\u514D\u5C06\u53D8\u91CF\u4E0E\u81EA\u5DF1\u8FDB\u884C\u6BD4\u8F83\u64CD\u4F5C"),s("\u3002")],-1),Ap=s("esint: "),Hp={href:"http://eslint.org/docs/rules/no-self-compare",target:"_blank",rel:"noopener noreferrer"},Vp=n("code",null,"no-self-compare",-1),Cp=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">===</span> score<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>   <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Ip=n("p",null,[n("strong",null,"\u907F\u514D\u4F7F\u7528\u9017\u53F7\u64CD\u4F5C\u7B26"),s("\u3002")],-1),Rp=s("eslint: "),Tp={href:"http://eslint.org/docs/rules/no-sequences",target:"_blank",rel:"noopener noreferrer"},$p=n("code",null,"no-sequences",-1),Bp=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span>test<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>   <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),zp=n("p",null,[n("strong",null,"\u4E0D\u8981\u968F\u610F\u66F4\u6539\u5173\u952E\u5B57\u7684\u503C"),s("\u3002")],-1),Mp=s("eslint: "),Pp={href:"http://eslint.org/docs/rules/no-shadow-restricted-names",target:"_blank",rel:"noopener noreferrer"},Lp=n("code",null,"no-shadow-restricted-names",-1),Up=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token string">&#39;value&#39;</span>     <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Yp=n("p",null,[n("strong",null,"\u7981\u6B62\u4F7F\u7528\u7A00\u758F\u6570\u7EC4\uFF08Sparse arrays\uFF09"),s("\u3002")],-1),Gp=s("eslint: "),Kp={href:"http://eslint.org/docs/rules/no-sparse-arrays",target:"_blank",rel:"noopener noreferrer"},Qp=n("code",null,"no-sparse-arrays",-1),Wp=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;apple&#39;</span><span class="token punctuation">,</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">]</span>       <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Xp=n("p",null,[n("strong",null,"\u4E0D\u8981\u4F7F\u7528\u5236\u8868\u7B26"),s("\u3002")],-1),Zp=s("eslint: "),nc={href:"http://eslint.org/docs/rules/no-tabs",target:"_blank",rel:"noopener noreferrer"},sc=n("code",null,"no-tabs",-1),ac=n("p",null,[n("strong",null,"\u6B63\u786E\u4F7F\u7528 ES6 \u4E2D\u7684\u5B57\u7B26\u4E32\u6A21\u677F"),s("\u3002")],-1),tc=s("eslint: "),oc={href:"http://eslint.org/docs/rules/no-template-curly-in-string",target:"_blank",rel:"noopener noreferrer"},ec=n("code",null,"no-template-curly-in-string",-1),pc=o('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token string">&#39;Hello ${name}&#39;</span>   <span class="token comment">// \u2717 avoid</span>\n<span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>   <span class="token comment">// \u2713 ok</span>\n</code></pre></div>',1),cc=n("p",null,[n("strong",null,[s("\u4F7F\u7528 "),n("code",null,"this"),s(" \u524D\u8BF7\u786E\u4FDD "),n("code",null,"super()"),s(" \u5DF2\u8C03\u7528")]),s("\u3002")],-1),lc=s("eslint: "),rc={href:"http://eslint.org/docs/rules/no-this-before-super",target:"_blank",rel:"noopener noreferrer"},ic=n("code",null,"no-this-before-super",-1),uc=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>legs <span class="token operator">=</span> <span class="token number">4</span>     <span class="token comment">// \u2717 avoid</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),kc=n("p",null,[n("strong",null,[s("\u7528 "),n("code",null,"throw"),s(" \u629B\u9519\u65F6\uFF0C\u629B\u51FA "),n("code",null,"Error"),s(" \u5BF9\u8C61\u800C\u4E0D\u662F\u5B57\u7B26\u4E32")]),s("\u3002")],-1),dc=s("eslint: "),_c={href:"http://eslint.org/docs/rules/no-throw-literal",target:"_blank",rel:"noopener noreferrer"},gc=n("code",null,"no-throw-literal",-1),hc=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">throw</span> <span class="token string">&#39;error&#39;</span>               <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span>    <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),mc=n("p",null,[n("strong",null,"\u884C\u672B\u4E0D\u7559\u7A7A\u683C"),s("\u3002")],-1),vc=s("eslint: "),fc={href:"http://eslint.org/docs/rules/no-trailing-spaces",target:"_blank",rel:"noopener noreferrer"},yc=n("code",null,"no-trailing-spaces",-1),jc=n("p",null,[n("strong",null,[s("\u4E0D\u8981\u4F7F\u7528 "),n("code",null,"undefined"),s(" \u6765\u521D\u59CB\u5316\u53D8\u91CF")]),s("\u3002")],-1),wc=s("eslint: "),bc={href:"http://eslint.org/docs/rules/no-undef-init",target:"_blank",rel:"noopener noreferrer"},xc=n("code",null,"no-undef-init",-1),Nc=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token keyword">undefined</span>    <span class="token comment">// \u2717 avoid</span>

<span class="token keyword">let</span> name
name <span class="token operator">=</span> <span class="token string">&#39;value&#39;</span>          <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),qc=n("p",null,[n("strong",null,"\u5FAA\u73AF\u8BED\u53E5\u4E2D\u6CE8\u610F\u66F4\u65B0\u5FAA\u73AF\u53D8\u91CF"),s("\u3002")],-1),Fc=s("eslint: "),Sc={href:"http://eslint.org/docs/rules/no-unmodified-loop-condition",target:"_blank",rel:"noopener noreferrer"},Jc=n("code",null,"no-unmodified-loop-condition",-1),Dc=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>    <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Ec=n("p",null,[n("strong",null,"\u5982\u679C\u6709\u66F4\u597D\u7684\u5B9E\u73B0\uFF0C\u5C3D\u91CF\u4E0D\u8981\u4F7F\u7528\u4E09\u5143\u8868\u8FBE\u5F0F"),s("\u3002")],-1),Oc=s("eslint: "),Ac={href:"http://eslint.org/docs/rules/no-unneeded-ternary",target:"_blank",rel:"noopener noreferrer"},Hc=n("code",null,"no-unneeded-ternary",-1),Vc=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> score <span class="token operator">=</span> val <span class="token operator">?</span> val <span class="token operator">:</span> <span class="token number">0</span>     <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">let</span> score <span class="token operator">=</span> val <span class="token operator">||</span> <span class="token number">0</span>          <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Cc=n("p",null,[n("strong",null,[n("code",null,"return"),s("\uFF0C"),n("code",null,"throw"),s("\uFF0C"),n("code",null,"continue"),s(" \u548C "),n("code",null,"break"),s(" \u540E\u4E0D\u8981\u518D\u8DDF\u4EE3\u7801")]),s("\u3002")],-1),Ic=s("eslint: "),Rc={href:"http://eslint.org/docs/rules/no-unreachable",target:"_blank",rel:"noopener noreferrer"},Tc=n("code",null,"no-unreachable",-1),$c=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">doSomething</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;never called&#39;</span><span class="token punctuation">)</span>     <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Bc=n("p",null,[n("strong",null,[n("code",null,"finally"),s(" \u4EE3\u7801\u5757\u4E2D\u4E0D\u8981\u518D\u6539\u53D8\u7A0B\u5E8F\u6267\u884C\u6D41\u7A0B")]),s("\u3002")],-1),zc=s("eslint: "),Mc={href:"http://eslint.org/docs/rules/no-unsafe-finally",target:"_blank",rel:"noopener noreferrer"},Pc=n("code",null,"no-unsafe-finally",-1),Lc=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">42</span>     <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),Uc=n("p",null,[n("strong",null,"\u5173\u7CFB\u8FD0\u7B97\u7B26\u7684\u5DE6\u503C\u4E0D\u8981\u505A\u53D6\u53CD\u64CD\u4F5C"),s("\u3002")],-1),Yc=s("eslint: "),Gc={href:"http://eslint.org/docs/rules/no-unsafe-negation",target:"_blank",rel:"noopener noreferrer"},Kc=n("code",null,"no-unsafe-negation",-1),Qc=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>       <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Wc=n("p",null,[n("strong",null,[s("\u907F\u514D\u4E0D\u5FC5\u8981\u7684 "),n("code",null,".call()"),s(" \u548C "),n("code",null,".apply()")]),s("\u3002")],-1),Xc=s("eslint: "),Zc={href:"http://eslint.org/docs/rules/no-useless-call",target:"_blank",rel:"noopener noreferrer"},nl=n("code",null,"no-useless-call",-1),sl=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">sum</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>   <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),al=n("p",null,[n("strong",null,"\u907F\u514D\u4F7F\u7528\u4E0D\u5FC5\u8981\u7684\u8BA1\u7B97\u503C\u4F5C\u5BF9\u8C61\u5C5E\u6027"),s("\u3002")],-1),tl=s("eslint: "),ol={href:"http://eslint.org/docs/rules/no-useless-computed-key",target:"_blank",rel:"noopener noreferrer"},el=n("code",null,"no-useless-computed-key",-1),pl=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span> <span class="token punctuation">}</span>   <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span> <span class="token punctuation">}</span>       <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),cl=n("p",null,[n("strong",null,"\u7981\u6B62\u591A\u4F59\u7684\u6784\u9020\u5668"),s("\u3002")],-1),ll=s("eslint: "),rl={href:"http://eslint.org/docs/rules/no-useless-constructor",target:"_blank",rel:"noopener noreferrer"},il=n("code",null,"no-useless-constructor",-1),ul=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment">// \u2717 avoid</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),kl=n("p",null,[n("strong",null,"\u7981\u6B62\u4E0D\u5FC5\u8981\u7684\u8F6C\u4E49"),s("\u3002")],-1),dl=s("eslint: "),_l={href:"http://eslint.org/docs/rules/no-useless-escape",target:"_blank",rel:"noopener noreferrer"},gl=n("code",null,"no-useless-escape",-1),hl=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">&#39;Hell\\o&#39;</span>  <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),ml=n("p",null,[n("strong",null,"import, export \u548C\u89E3\u6784\u64CD\u4F5C\u4E2D\uFF0C\u7981\u6B62\u8D4B\u503C\u5230\u540C\u540D\u53D8\u91CF"),s("\u3002")],-1),vl=s("eslint: "),fl={href:"http://eslint.org/docs/rules/no-useless-rename",target:"_blank",rel:"noopener noreferrer"},yl=n("code",null,"no-useless-rename",-1),jl=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> config <span class="token keyword">as</span> config <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./config&#39;</span>     <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> config <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./config&#39;</span>               <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),wl=n("p",null,[n("strong",null,"\u5C5E\u6027\u524D\u9762\u4E0D\u8981\u52A0\u7A7A\u683C"),s("\u3002")],-1),bl=s("eslint: "),xl={href:"http://eslint.org/docs/rules/no-whitespace-before-property",target:"_blank",rel:"noopener noreferrer"},Nl=n("code",null,"no-whitespace-before-property",-1),ql=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code>user <span class="token punctuation">.</span>name      <span class="token comment">// \u2717 avoid</span>
user<span class="token punctuation">.</span>name       <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Fl=n("p",null,[n("strong",null,[s("\u7981\u6B62\u4F7F\u7528 "),n("code",null,"with")]),s("\u3002")],-1),Sl=s("eslint: "),Jl={href:"http://eslint.org/docs/rules/no-with",target:"_blank",rel:"noopener noreferrer"},Dl=n("code",null,"no-with",-1),El=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">with</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
</code></pre></div>`,1),Ol=n("p",null,[n("strong",null,"\u5BF9\u8C61\u5C5E\u6027\u6362\u884C\u65F6\u6CE8\u610F\u7EDF\u4E00\u4EE3\u7801\u98CE\u683C"),s("\u3002")],-1),Al=s("eslint: "),Hl={href:"http://eslint.org/docs/rules/object-property-newline",target:"_blank",rel:"noopener noreferrer"},Vl=n("code",null,"object-property-newline",-1),Cl=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jane Doe&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;jdoe86&#39;</span>            <span class="token comment">// \u2717 avoid</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jane Doe&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;jdoe86&#39;</span> <span class="token punctuation">}</span>    <span class="token comment">// \u2713 ok</span>

<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jane Doe&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;jdoe86&#39;</span>
<span class="token punctuation">}</span>                                                                 <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Il=n("p",null,[n("strong",null,"\u4EE3\u7801\u5757\u4E2D\u907F\u514D\u591A\u4F59\u7559\u767D"),s("\u3002")],-1),Rl=s("eslint: "),Tl={href:"http://eslint.org/docs/rules/padded-blocks",target:"_blank",rel:"noopener noreferrer"},$l=n("code",null,"padded-blocks",-1),Bl=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// \u2717 avoid</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u2713 ok</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),zl=n("p",null,[n("strong",null,"\u5C55\u5F00\u8FD0\u7B97\u7B26\u4E0E\u5B83\u7684\u8868\u8FBE\u5F0F\u95F4\u4E0D\u8981\u7559\u7A7A\u767D"),s("\u3002")],-1),Ml=s("eslint: "),Pl={href:"http://eslint.org/docs/rules/rest-spread-spacing",target:"_blank",rel:"noopener noreferrer"},Ll=n("code",null,"rest-spread-spacing",-1),Ul=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span> args<span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>     <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Yl=n("p",null,[n("strong",null,"\u9047\u5230\u5206\u53F7\u65F6\u7A7A\u683C\u8981\u540E\u7559\u524D\u4E0D\u7559"),s("\u3002")],-1),Gl=s("eslint: "),Kl={href:"http://eslint.org/docs/rules/semi-spacing",target:"_blank",rel:"noopener noreferrer"},Ql=n("code",null,"semi-spacing",-1),Wl=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length <span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>    <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Xl=n("p",null,[n("strong",null,"\u4EE3\u7801\u5757\u9996\u5C3E\u7559\u7A7A\u683C"),s("\u3002")],-1),Zl=s("eslint: "),nr={href:"http://eslint.org/docs/rules/space-before-blocks",target:"_blank",rel:"noopener noreferrer"},sr=n("code",null,"space-before-blocks",-1),ar=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>admin<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>     <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>admin<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>    <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),tr=n("p",null,[n("strong",null,"\u5706\u62EC\u53F7\u95F4\u4E0D\u7559\u7A7A\u683C"),s("\u3002")],-1),or=s("eslint: "),er={href:"http://eslint.org/docs/rules/space-in-parens",target:"_blank",rel:"noopener noreferrer"},pr=n("code",null,"space-in-parens",-1),cr=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getName</span><span class="token punctuation">(</span> name <span class="token punctuation">)</span>     <span class="token comment">// \u2717 avoid</span>
<span class="token function">getName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>       <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),lr=n("p",null,[n("strong",null,"\u4E00\u5143\u8FD0\u7B97\u7B26\u540E\u9762\u8DDF\u4E00\u4E2A\u7A7A\u683C"),s("\u3002")],-1),rr=s("eslint: "),ir={href:"http://eslint.org/docs/rules/space-unary-ops",target:"_blank",rel:"noopener noreferrer"},ur=n("code",null,"space-unary-ops",-1),kr=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">typeof</span><span class="token operator">!</span>admin        <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">typeof</span> <span class="token operator">!</span>admin        <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),dr=n("p",null,[n("strong",null,"\u6CE8\u91CA\u9996\u5C3E\u7559\u7A7A\u683C"),s("\u3002")],-1),_r=s("eslint: "),gr={href:"http://eslint.org/docs/rules/spaced-comment",target:"_blank",rel:"noopener noreferrer"},hr=n("code",null,"spaced-comment",-1),mr=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">//comment           // \u2717 avoid</span>
<span class="token comment">// comment          // \u2713 ok</span>

<span class="token comment">/*comment*/</span>         <span class="token comment">// \u2717 avoid</span>
<span class="token comment">/* comment */</span>       <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),vr=n("p",null,[n("strong",null,"\u6A21\u677F\u5B57\u7B26\u4E32\u4E2D\u53D8\u91CF\u524D\u540E\u4E0D\u52A0\u7A7A\u683C"),s("\u3002")],-1),fr=s("eslint: "),yr={href:"http://eslint.org/docs/rules/template-curly-spacing",target:"_blank",rel:"noopener noreferrer"},jr=n("code",null,"template-curly-spacing",-1),wr=o('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> name <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>    <span class="token comment">// \u2717 avoid</span>\n<span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>      <span class="token comment">// \u2713 ok</span>\n</code></pre></div>',1),br=n("p",null,[n("strong",null,[s("\u68C0\u67E5 "),n("code",null,"NaN"),s(" \u7684\u6B63\u786E\u59FF\u52BF\u662F\u4F7F\u7528 "),n("code",null,"isNaN()")]),s("\u3002")],-1),xr=s("eslint: "),Nr={href:"http://eslint.org/docs/rules/use-isnan",target:"_blank",rel:"noopener noreferrer"},qr=n("code",null,"use-isnan",-1),Fr=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>price <span class="token operator">===</span> <span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>      <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>       <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Sr=n("p",null,[n("strong",null,[s("\u7528\u5408\u6CD5\u7684\u5B57\u7B26\u4E32\u8DDF "),n("code",null,"typeof"),s(" \u8FDB\u884C\u6BD4\u8F83\u64CD\u4F5C")]),s("\u3002")],-1),Jr=s("eslint: "),Dr={href:"http://eslint.org/docs/rules/valid-typeof",target:"_blank",rel:"noopener noreferrer"},Er=n("code",null,"valid-typeof",-1),Or=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">typeof</span> name <span class="token operator">===</span> <span class="token string">&#39;undefimed&#39;</span>     <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">typeof</span> name <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span>     <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Ar=n("p",null,[n("strong",null,"\u81EA\u8C03\u7528\u533F\u540D\u51FD\u6570 (IIFEs) \u4F7F\u7528\u62EC\u53F7\u5305\u88F9"),s("\u3002")],-1),Hr=s("eslint: "),Vr={href:"http://eslint.org/docs/rules/wrap-iife",target:"_blank",rel:"noopener noreferrer"},Cr=n("code",null,"wrap-iife",-1),Ir=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">// \u2717 avoid</span>

<span class="token keyword">const</span> getName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
<span class="token keyword">const</span> getName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Rr=n("p",null,[n("strong",null,[n("code",null,"yield *"),s(" \u4E2D\u7684 "),n("code",null,"*"),s(" \u524D\u540E\u90FD\u8981\u6709\u7A7A\u683C")]),s("\u3002")],-1),Tr=s("eslint: "),$r={href:"http://eslint.org/docs/rules/yield-star-spacing",target:"_blank",rel:"noopener noreferrer"},Br=n("code",null,"yield-star-spacing",-1),zr=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">yield</span> <span class="token operator">*</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1),Mr=n("p",null,[n("strong",null,"\u8BF7\u4E66\u5199\u4F18\u96C5\u7684\u6761\u4EF6\u8BED\u53E5\uFF08avoid Yoda conditions\uFF09"),s("\u3002")],-1),Pr=s("eslint: "),Lr={href:"http://eslint.org/docs/rules/yoda",target:"_blank",rel:"noopener noreferrer"},Ur=n("code",null,"yoda",-1),Yr=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">42</span> <span class="token operator">===</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>    <span class="token comment">// \u2717 avoid</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">===</span> <span class="token number">42</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>    <span class="token comment">// \u2713 ok</span>
</code></pre></div>`,1);function Gr(Kr,Qr){const a=l("ExternalLinkIcon");return p(),c("div",null,[i,n("p",null,[u,n("a",k,[d,t(a)]),_]),n("ul",null,[n("li",null,[g,n("p",null,[h,n("a",m,[v,t(a)])]),f]),n("li",null,[y,n("p",null,[j,n("a",w,[b,t(a)])]),x]),n("li",null,[N,n("p",null,[q,n("a",F,[S,t(a)])]),J]),n("li",null,[D,n("p",null,[E,n("a",O,[A,t(a)])]),H]),n("li",null,[V,n("p",null,[C,n("a",I,[R,t(a)])]),T]),n("li",null,[$,n("p",null,[B,n("a",z,[M,t(a)])]),P]),n("li",null,[L,n("p",null,[U,n("a",Y,[G,t(a)])]),K]),n("li",null,[Q,n("p",null,[W,n("a",X,[Z,t(a)])]),nn]),n("li",null,[sn,n("p",null,[an,n("a",tn,[on,t(a)])]),en]),n("li",null,[pn,n("p",null,[cn,n("a",ln,[rn,t(a)])]),un]),n("li",null,[kn,n("p",null,[dn,n("a",_n,[gn,t(a)])]),hn]),n("li",null,[mn,n("p",null,[vn,n("a",fn,[yn,t(a)])]),jn]),n("li",null,[wn,n("p",null,[bn,n("a",xn,[Nn,t(a)])]),qn]),n("li",null,[Fn,n("p",null,[Sn,n("a",Jn,[Dn,t(a)])]),En]),n("li",null,[On,n("p",null,[An,n("a",Hn,[Vn,t(a)])]),Cn]),n("li",null,[In,n("p",null,[Rn,n("a",Tn,[$n,t(a)])]),Bn]),n("li",null,[zn,n("p",null,[Mn,n("a",Pn,[Ln,t(a)])]),Un]),n("li",null,[Yn,n("p",null,[Gn,n("a",Kn,[Qn,t(a)])]),Wn]),n("li",null,[Xn,n("p",null,[Zn,n("a",ns,[ss,t(a)])]),as]),n("li",null,[ts,n("p",null,[os,n("a",es,[ps,t(a)])]),cs]),n("li",null,[ls,n("p",null,[rs,n("a",is,[us,t(a)])]),ks]),n("li",null,[ds,n("p",null,[_s,n("a",gs,[hs,t(a)])])]),n("li",null,[ms,n("p",null,[vs,n("a",fs,[ys,t(a)])]),js]),n("li",null,[ws,n("p",null,[bs,n("a",xs,[Ns,t(a)])]),qs]),n("li",null,[Fs,n("p",null,[Ss,n("a",Js,[Ds,t(a)])]),Es]),n("li",null,[Os,n("p",null,[As,n("a",Hs,[Vs,t(a)])]),Cs]),n("li",null,[Is,n("p",null,[Rs,n("a",Ts,[$s,t(a)])]),Bs]),n("li",null,[zs,n("p",null,[Ms,n("a",Ps,[Ls,t(a)])]),Us]),n("li",null,[Ys,n("p",null,[Gs,n("a",Ks,[Qs,t(a)])]),Ws]),n("li",null,[Xs,n("p",null,[Zs,n("a",na,[sa,t(a)])]),aa]),n("li",null,[ta,n("p",null,[oa,n("a",ea,[pa,t(a)])]),ca]),n("li",null,[la,n("p",null,[ra,n("a",ia,[ua,t(a)])]),ka]),n("li",null,[da,n("p",null,[_a,n("a",ga,[ha,t(a)])]),ma]),n("li",null,[va,n("p",null,[fa,n("a",ya,[ja,t(a)])]),wa]),n("li",null,[ba,n("p",null,[xa,n("a",Na,[qa,t(a)])]),Fa]),n("li",null,[Sa,n("p",null,[Ja,n("a",Da,[Ea,t(a)])]),Oa]),n("li",null,[Aa,n("p",null,[Ha,n("a",Va,[Ca,t(a)])]),Ia]),n("li",null,[Ra,n("p",null,[Ta,n("a",$a,[Ba,t(a)])]),za]),n("li",null,[Ma,n("p",null,[Pa,n("a",La,[Ua,t(a)])]),Ya]),n("li",null,[Ga,n("p",null,[Ka,n("a",Qa,[Wa,t(a)])]),Xa]),n("li",null,[Za,n("p",null,[nt,n("a",st,[at,t(a)])]),tt]),n("li",null,[ot,n("p",null,[et,n("a",pt,[ct,t(a)])]),lt]),n("li",null,[rt,n("p",null,[it,n("a",ut,[kt,t(a)])]),dt]),n("li",null,[_t,n("p",null,[gt,n("a",ht,[mt,t(a)])]),vt]),n("li",null,[ft,n("p",null,[yt,n("a",jt,[wt,t(a)])]),bt]),n("li",null,[xt,n("p",null,[Nt,n("a",qt,[Ft,t(a)])]),St]),n("li",null,[Jt,n("p",null,[Dt,n("a",Et,[Ot,t(a)])]),At]),n("li",null,[Ht,n("p",null,[Vt,n("a",Ct,[It,t(a)])]),Rt]),n("li",null,[Tt,n("p",null,[$t,n("a",Bt,[zt,t(a)])]),Mt]),n("li",null,[Pt,n("p",null,[Lt,n("a",Ut,[Yt,t(a)])]),Gt]),n("li",null,[Kt,n("p",null,[Qt,n("a",Wt,[Xt,t(a)])]),Zt]),n("li",null,[no,n("p",null,[so,n("a",ao,[to,t(a)])]),oo]),n("li",null,[eo,n("p",null,[po,n("a",co,[lo,t(a)])]),ro]),n("li",null,[io,n("p",null,[uo,n("a",ko,[_o,t(a)])]),go]),n("li",null,[ho,n("p",null,[mo,n("a",vo,[fo,t(a)])]),yo]),n("li",null,[jo,n("p",null,[wo,n("a",bo,[xo,t(a)])]),No]),n("li",null,[qo,n("p",null,[Fo,n("a",So,[Jo,t(a)])]),Do]),n("li",null,[Eo,n("p",null,[Oo,n("a",Ao,[Ho,t(a)])]),Vo]),n("li",null,[Co,n("p",null,[Io,n("a",Ro,[To,t(a)])]),$o]),n("li",null,[Bo,n("p",null,[zo,n("a",Mo,[Po,t(a)])]),Lo]),n("li",null,[Uo,n("p",null,[Yo,n("a",Go,[Ko,t(a)])]),Qo]),n("li",null,[Wo,n("p",null,[Xo,n("a",Zo,[ne,t(a)])])]),n("li",null,[se,n("p",null,[ae,n("a",te,[oe,t(a)])]),ee]),n("li",null,[pe,n("p",null,[ce,n("a",le,[re,t(a)])]),ie]),n("li",null,[ue,n("p",null,[ke,n("a",de,[_e,t(a)])]),ge]),n("li",null,[he,n("p",null,[me,n("a",ve,[fe,t(a)])]),ye]),n("li",null,[je,n("p",null,[we,n("a",be,[xe,t(a)])]),Ne]),n("li",null,[qe,n("p",null,[Fe,n("a",Se,[Je,t(a)])]),De]),n("li",null,[Ee,n("p",null,[Oe,n("a",Ae,[He,t(a)])]),Ve]),n("li",null,[Ce,n("p",null,[Ie,n("a",Re,[Te,t(a)])]),$e]),n("li",null,[Be,n("p",null,[ze,n("a",Me,[Pe,t(a)])]),Le]),n("li",null,[Ue,n("p",null,[Ye,n("a",Ge,[Ke,t(a)])]),Qe]),n("li",null,[We,n("p",null,[Xe,n("a",Ze,[np,t(a)])]),sp]),n("li",null,[ap,n("p",null,[tp,n("a",op,[ep,t(a)])]),pp]),n("li",null,[cp,n("p",null,[lp,n("a",rp,[ip,t(a)])]),up]),n("li",null,[kp,n("p",null,[dp,n("a",_p,[gp,t(a)])]),hp]),n("li",null,[mp,n("p",null,[vp,n("a",fp,[yp,t(a)])]),jp]),n("li",null,[wp,n("p",null,[bp,n("a",xp,[Np,t(a)])]),qp]),n("li",null,[Fp,n("p",null,[Sp,n("a",Jp,[Dp,t(a)])]),Ep]),n("li",null,[Op,n("p",null,[Ap,n("a",Hp,[Vp,t(a)])]),Cp]),n("li",null,[Ip,n("p",null,[Rp,n("a",Tp,[$p,t(a)])]),Bp]),n("li",null,[zp,n("p",null,[Mp,n("a",Pp,[Lp,t(a)])]),Up]),n("li",null,[Yp,n("p",null,[Gp,n("a",Kp,[Qp,t(a)])]),Wp]),n("li",null,[Xp,n("p",null,[Zp,n("a",nc,[sc,t(a)])])]),n("li",null,[ac,n("p",null,[tc,n("a",oc,[ec,t(a)])]),pc]),n("li",null,[cc,n("p",null,[lc,n("a",rc,[ic,t(a)])]),uc]),n("li",null,[kc,n("p",null,[dc,n("a",_c,[gc,t(a)])]),hc]),n("li",null,[mc,n("p",null,[vc,n("a",fc,[yc,t(a)])])]),n("li",null,[jc,n("p",null,[wc,n("a",bc,[xc,t(a)])]),Nc]),n("li",null,[qc,n("p",null,[Fc,n("a",Sc,[Jc,t(a)])]),Dc]),n("li",null,[Ec,n("p",null,[Oc,n("a",Ac,[Hc,t(a)])]),Vc]),n("li",null,[Cc,n("p",null,[Ic,n("a",Rc,[Tc,t(a)])]),$c]),n("li",null,[Bc,n("p",null,[zc,n("a",Mc,[Pc,t(a)])]),Lc]),n("li",null,[Uc,n("p",null,[Yc,n("a",Gc,[Kc,t(a)])]),Qc]),n("li",null,[Wc,n("p",null,[Xc,n("a",Zc,[nl,t(a)])]),sl]),n("li",null,[al,n("p",null,[tl,n("a",ol,[el,t(a)])]),pl]),n("li",null,[cl,n("p",null,[ll,n("a",rl,[il,t(a)])]),ul]),n("li",null,[kl,n("p",null,[dl,n("a",_l,[gl,t(a)])]),hl]),n("li",null,[ml,n("p",null,[vl,n("a",fl,[yl,t(a)])]),jl]),n("li",null,[wl,n("p",null,[bl,n("a",xl,[Nl,t(a)])]),ql]),n("li",null,[Fl,n("p",null,[Sl,n("a",Jl,[Dl,t(a)])]),El]),n("li",null,[Ol,n("p",null,[Al,n("a",Hl,[Vl,t(a)])]),Cl]),n("li",null,[Il,n("p",null,[Rl,n("a",Tl,[$l,t(a)])]),Bl]),n("li",null,[zl,n("p",null,[Ml,n("a",Pl,[Ll,t(a)])]),Ul]),n("li",null,[Yl,n("p",null,[Gl,n("a",Kl,[Ql,t(a)])]),Wl]),n("li",null,[Xl,n("p",null,[Zl,n("a",nr,[sr,t(a)])]),ar]),n("li",null,[tr,n("p",null,[or,n("a",er,[pr,t(a)])]),cr]),n("li",null,[lr,n("p",null,[rr,n("a",ir,[ur,t(a)])]),kr]),n("li",null,[dr,n("p",null,[_r,n("a",gr,[hr,t(a)])]),mr]),n("li",null,[vr,n("p",null,[fr,n("a",yr,[jr,t(a)])]),wr]),n("li",null,[br,n("p",null,[xr,n("a",Nr,[qr,t(a)])]),Fr]),n("li",null,[Sr,n("p",null,[Jr,n("a",Dr,[Er,t(a)])]),Or]),n("li",null,[Ar,n("p",null,[Hr,n("a",Vr,[Cr,t(a)])]),Ir]),n("li",null,[Rr,n("p",null,[Tr,n("a",$r,[Br,t(a)])]),zr]),n("li",null,[Mr,n("p",null,[Pr,n("a",Lr,[Ur,t(a)])]),Yr])])])}var Xr=e(r,[["render",Gr],["__file","js-standard-style.html.vue"]]);export{Xr as default};
